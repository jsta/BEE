openapi: 3.0.3
servers:
  - url: '{scheme}://{server}:{port}'
    variables:
      scheme:
        default: ''
        enum:
          - https
          - http
        description: ''
      server:
        default: localhost
      port:
        default: '5000'
info:
  title: BEE Resource Manager API
  description: BEE Resource Manager API implementing efficient resource management.
  version: '0.1'
paths:
  /bee_sched/v1/jobs:
    summary: Information about jobs used by the scheduling algorithm
    get:
      summary: Get or create information about jobs
      description: Get or create information about jobs
      operationId: get_jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        default:
          description: Default error sample response
    post:
      summary: Create a new job
      description: Create a new job with the given information
      operationId: create_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: Successfully created a new job
        default:
          description: Default error sample response
  '/bee_sched/v1/jobs/{job_id}':
    summary: Get information about a specific job
    description: Get information about a specific job
    get:
      summary: Get information about a specific job
      description: ''
      operationId: get_job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Default error sample response
    put:
      summary: Update information about a specific job
      description: Update information about a specific job
      operationId: update_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Default error sample response
    parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: integer
  '/bee_sched/v1/jobs/{job_id}/allocation':
    summary: Get recommended allocation information for a specific job
    get:
      summary: Get allocation information for a specific job
      description: Get allocation information for a specific job
      operationId: get_allocation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        default:
          description: Default error sample response
    parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: integer
  /bee_sched/v1/nodes:
    summary: Get or create information about the collection of nodes
    description: Get or create information about the collection of nodes
    get:
      summary: Get a list of all current nodes
      description: Get a list of all current nodes
      operationId: get_nodes
      responses:
        '200':
          description: A list of node ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        default:
          description: Default error sample response
    post:
      summary: Create a new node
      description: Create a new node with full details
      operationId: create_node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '201':
          description: Successfully created a node
        default:
          description: Default error sample response
  '/bee_sched/v1/nodes/{node_id}':
    summary: Get or update information about a specific node
    description: Get or update information about a specific node
    parameters:
      - name: node_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get information about a specific node
      description: Get information about a specific node
      operationId: get_node
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        default:
          description: Default error sample response
    put:
      summary: Update information about a specific node
      description: Update information about a specific node
      operationId: update_node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        default:
          description: Default error sample response
  /bee_sched/v1/partitions:
    summary: Get or create information about partitions of the current cluster
    get:
      summary: Get information about all available partitions
      description: Get information about all available partitions
      operationId: get_partitions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        default:
          description: Default error sample response
    post:
      summary: Create a new partition
      description: Create a new partition
      operationId: create_partition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partition'
      responses:
        '201':
          description: Successfully created a Partition
        default:
          description: Default error sample response
  '/bee_sched/v1/partitions/{partition_id}':
    summary: Get or update specific information about a partition
    description: Get or update specific information about a partition
    parameters:
      - name: partition_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get details about a partition
      description: Get details about a partition
      operationId: get_partition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
        default:
          description: Default error sample response
    put:
      summary: Update a partition
      description: Update details about a partition
      operationId: update_partition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partition'
      responses:
        '200':
          description: OK
        default:
          description: Default error sample response
  /bee_sched/v1/workflows:
    summary: Get or create workflows
    get:
      summary: Get a list of current workflows
      description: Get a list of current workflows
      operationId: get_workflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        default:
          description: Default error sample response
    post:
      summary: Create a new workflow
      description: Create a new workflow
      operationId: create_workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '201':
          description: Successfully created a Workflow
        default:
          description: Default error sample response
  '/bee_sched/v1/workflows/{workflow_id}':
    summary: Get or update workflow information
    parameters:
      - name: workflow_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get details about a specific workflow
      description: Get details about a specific workflow
      operationId: get_workflow
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        default:
          description: Default error sample response
    put:
      summary: Update a workflow
      description: Update information about a workflow
      operationId: update_workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
      responses:
        '200':
          description: OK
        default:
          description: Default error sample response
components:
  schemas:
    Node:
      properties:
        id:
          type: string
        name:
          type: string
        cores:
          type: integer
      required:
        - name
        - cores
# Passes the ID that references the Job in the database
# TODO: This may also require the ID of the workflow
    Job:
      properties:
        id:
          type: integer
      required:
        - id
    Allocation:
      properties:
        nodes:
          type: array
          items:
            type: integer
        start_time:
          type: integer
      required:
        - nodes
        - start_time
      example:
        empty:
          summary: Empty value
          value:
            nodes: []
            start_time: ''
        single:
          summary: Single node allocation
          value:
            nodes:
              - 1
            start_time: 6000
        double:
          summary: Double node allocation
          value:  
            nodes:
              - 1
              - 2
            start_time: 8000
    Partition:
      properties:
        id:
          type: integer
      required:
        - id
      example:
        empty:
          id: 1
# How is this be connected to the Jobs/Tasks?
    Workflow:
      properties:
        id:
          type: integer
        name:
          type: string
        inputs:
          type: array
          items:
            type: string
        outputs:
          type: array
          items:
            type: string
        state:
          type: string
          enum: ['WAITING', 'RUNNING', 'CANCELLED', 'CRASHED', 'ZOMBIE', 'COMPLETE']
      required:
        - id
      example:
        id: 1
